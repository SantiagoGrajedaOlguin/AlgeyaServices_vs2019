//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestServices.Sinc_Local {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Sinc_Local.ISincronizacion")]
    public interface ISincronizacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISincronizacion/Sincronizar", ReplyAction="http://tempuri.org/ISincronizacion/SincronizarResponse")]
        void Sincronizar(string DataCuerpo, string DataDetalle, string DataCalidades, string DataObservaciones, string DataObservacionesDetalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISincronizacion/Sincronizar", ReplyAction="http://tempuri.org/ISincronizacion/SincronizarResponse")]
        System.Threading.Tasks.Task SincronizarAsync(string DataCuerpo, string DataDetalle, string DataCalidades, string DataObservaciones, string DataObservacionesDetalle);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISincronizacionChannel : TestServices.Sinc_Local.ISincronizacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SincronizacionClient : System.ServiceModel.ClientBase<TestServices.Sinc_Local.ISincronizacion>, TestServices.Sinc_Local.ISincronizacion {
        
        public SincronizacionClient() {
        }
        
        public SincronizacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SincronizacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SincronizacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SincronizacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Sincronizar(string DataCuerpo, string DataDetalle, string DataCalidades, string DataObservaciones, string DataObservacionesDetalle) {
            base.Channel.Sincronizar(DataCuerpo, DataDetalle, DataCalidades, DataObservaciones, DataObservacionesDetalle);
        }
        
        public System.Threading.Tasks.Task SincronizarAsync(string DataCuerpo, string DataDetalle, string DataCalidades, string DataObservaciones, string DataObservacionesDetalle) {
            return base.Channel.SincronizarAsync(DataCuerpo, DataDetalle, DataCalidades, DataObservaciones, DataObservacionesDetalle);
        }
    }
}
